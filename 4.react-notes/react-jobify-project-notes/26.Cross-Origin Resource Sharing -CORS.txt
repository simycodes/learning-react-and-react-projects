https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS

Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins
 (domain, scheme, or port) other than its own from which a browser should permit loading resources. CORS also relies
 on a mechanism by which browsers make a "preflight" request to the server hosting the cross-origin resource, in order
 to check that the server will permit the actual request. In that preflight, the browser sends headers that indicate
 the HTTP method and headers that will be used in the actual request.

An example of a cross-origin request: the front-end JavaScript code served from https://domain-a.com uses 
XMLHttpRequest to make a request for https://domain-b.com/data.json.

For security reasons, browsers restrict cross-origin HTTP requests initiated from scripts. For example,
 XMLHttpRequest and the Fetch API follow the same-origin policy. This means that a web application using 
those APIs can only request resources from the same origin the application was loaded from unless the
 response from other origins includes the right CORS headers.

----To tell the development server to proxy any unknown requests to your API server in development, add a proxy field
 to your package.json, for example:

  "proxy": "http://localhost:4000",

This way, when you fetch('/api/todos') in development, the development server will recognize that itâ€™s not a static
 asset, and will proxy your request to http://localhost:4000/api/todos as a fallback. The development server will 
only attempt to send requests without text/html in its Accept header to the proxy.

Conveniently, this avoids CORS issues and error messages like this in development:
Fetch API cannot load http://localhost:4000/api/todos. No 'Access-Control-Allow-Origin' header is present on the 
requested resource. Origin 'http://localhost:3000' is therefore not allowed access. If an opaque response serves 
your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.