The contextAPI helps in passing props-arguments from a parent component to a sub component (on several levels down)
in the components chain relationship without having to pass a prop from one parent component to the next component 
down the component chain( this process being refered to as prop drilling.)

Hence contextAPI and redux(in complex situations) helps to remove the use of prop drilling in passing props to sub
components.


EXAMPLE OF PROP DRILLING IS BELOW - removePerson is being passed an argument in prop drilling, contextAPI helps avoid 
doing this.

const PropDrilling = () => {
  const [people, setPeople] = useState(data);

  const removePerson = (id) => {
      const newPeople = people.filter((person) => {
        if(person.id !== id) {
          return person;
        }
      })
    setPeople(newPeople);
  }

  return (
    <section>
      <h3>Prop Drilling</h3>
      <List people={people} removePerson={removePerson}/>
    </section>
  )
};

const List = ({people, removePerson}) => {
    return (
      <>
      {
        people.map((person) => {
          return (
            <SinglePerson key={person.id} {...person} removePerson={removePerson}/>
          )
        })
      }
      </>
    )
}

const SinglePerson = ({id, name, removePerson}) => {
    return (
      <>
       <div className='item'>
        <h4>{name}</h4>
        <button onClick={()=> removePerson(id)}>
          remove person
        </button>
       </div>
      </>
    )
}